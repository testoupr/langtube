'use strict';var x=require('cross-fetch');function _interopDefault(e){return e&&e.__esModule?e:{default:e}}var x__default=/*#__PURE__*/_interopDefault(x);var r=class extends Error{error;details;documentationUrl;constructor(e){super(e.message||"An unexpected error occurred"),this.error=e.error||"internal-error",this.details=e.details||"An unexpected error occurred",this.documentationUrl=e.documentationUrl||"",this.name="SupadataError";}};var m={version:"1.3.0"};var S=`supadata-js/${m.version}`,n=class{config;constructor(e){this.config=e;}async fetch(e,t={},s="GET"){let a=`${this.config.baseUrl||"https://api.supadata.ai/v1"}${e.startsWith("/")?e:`/${e}`}`;if(s==="GET"&&Object.keys(t).length>0){let u=new URLSearchParams;Object.entries(t).forEach(([o,p])=>{p!=null&&(Array.isArray(p)?p.forEach(f=>u.append(o,String(f))):u.append(o,String(p)));}),a+=`?${u.toString()}`;}return this.fetchUrl(a,s,t)}async fetchUrl(e,t="GET",s){let i={method:t,headers:{"x-api-key":this.config.apiKey,"Content-Type":"application/json","User-Agent":S}};t==="POST"&&s&&(i.body=JSON.stringify(s));let a=await x__default.default(e,i),u=a.headers.get("content-type");if(!a.ok)if(u?.includes("application/json")){let o=await a.json();throw new r(o)}else throw new r({error:"internal-error",message:"Unexpected error response format",details:await a.text()});try{if(!u?.includes("application/json"))throw new r({error:"internal-error",message:"Invalid response format",details:"Expected JSON response but received different content type"});return await a.json()}catch(o){throw new r({error:"internal-error",message:"Failed to parse response",details:o instanceof Error?o.message:"Unknown error"})}}};var b=class extends n{transcript=Object.assign(async e=>this.fetch("/youtube/transcript",e),{batch:async e=>(this.validateLimit(e,1,5e3,"batch operation"),this.fetch("/youtube/transcript/batch",e,"POST"))});video=Object.assign(async e=>this.fetch("/youtube/video",e),{batch:async e=>(this.validateLimit(e,1,5e3,"batch operation"),this.fetch("/youtube/video/batch",e,"POST"))});channel=Object.assign(async e=>this.fetch("/youtube/channel",e),{videos:async e=>(this.validateLimit(e),this.fetch("/youtube/channel/videos",e))});playlist=Object.assign(async e=>this.fetch("/youtube/playlist",e),{videos:async e=>(this.validateLimit(e),this.fetch("/youtube/playlist/videos",e))});batch={getBatchResults:async e=>{if(!e)throw new r({error:"invalid-request",message:"Missing jobId",details:"The jobId parameter is required to get batch results."});return this.fetch(`/youtube/batch/${e}`)}};translate=async e=>this.fetch("/youtube/transcript/translate",e);search=async e=>{if(!e.query)throw new r({error:"invalid-request",message:"Missing query parameter",details:"The query parameter is required for search."});return this.validateLimit(e,1,5e3,"search"),this.fetch("/youtube/search",e)};validateLimit(e,t=1,s=5e3,i="operation"){if(e.limit!=null&&e.limit!=null&&(e.limit<t||e.limit>s))throw new r({error:"invalid-request",message:`Invalid limit for ${i}.`,details:`The limit must be between ${t} and ${s}.`})}};var h=class extends n{async scrape(e){return this.fetch("/web/scrape",{url:e})}async map(e){return this.fetch("/web/map",{url:e})}async crawl(e){return this.fetch("/web/crawl",e,"POST")}async getCrawlResults(e){let t,s=[],i;do t=await(i?this.fetchUrl(i):this.fetch(`/web/crawl/${e}`)),t.pages&&(s=[...s,...t.pages]),i=t.next;while(i);return t}};var d=class extends n{get=async e=>this.fetch("/transcript",e);getJobStatus=async e=>{if(!e)throw new r({error:"invalid-request",message:"Missing jobId",details:"The jobId parameter is required to get transcript job status."});return this.fetch(`/transcript/${e}`)}};var g=class{youtube;web;_transcriptService;constructor(e){this.youtube=new b(e),this.web=new h(e),this._transcriptService=new d(e);}transcript=Object.assign(async e=>this._transcriptService.get(e),{getJobStatus:e=>this._transcriptService.getJobStatus(e)})};
exports.BaseClient=n;exports.Supadata=g;exports.SupadataError=r;exports.TranscriptService=d;exports.WebService=h;exports.YouTubeService=b;//# sourceMappingURL=index.cjs.map
//# sourceMappingURL=index.cjs.map